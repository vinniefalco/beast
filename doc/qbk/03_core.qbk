[/
    Copyright (c) 2016-2017 Vinnie Falco (vinnie dot falco at gmail dot com)

    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

    Official repository: https://github.com/boostorg/beast
]

[section:using_io Using Networking]

This library depends and builds on the networking facilities destined to become
part of the official C++ standard library. The latest draft of the proposal to
add these networking facilities is called the
[@http://cplusplus.github.io/networking-ts/draft.pdf Networking Technical Specification].
This specification is projected to become official no sooner than the year
2023. There are three implementations of this specification, which differ
cosmetically but otherwise use the same function signatures and type
declarations: the reference networking-ts implementation, the Boost.Asio
implementation, and the stand-alone Asio implementation. The following
table illustrates shows how an I/O context variable is declared by including
the appropriate header and using a suitable namespace alias:

[table Networking Implementations
[[Name][Namespace and Header Example ]]
[
    [__Asio__]
    [
```
        #include <boost/asio/io_context.hpp>
        namespace net = boost::asio;
        net::io_context ioc;
```
    ]
][
    [[@https://think-async.com/Asio/ Asio (Standalone)]]
    [
```
        #include <asio/io_context.hpp>
        namespace net = asio;
        net::io_context ioc;
```
    ]
][
    [[@https://github.com/chriskohlhoff/networking-ts-impl networking-ts-impl]]
    [
```
        #include <experimental/io_context>
        namespace net = std::experimental::net;
        net::io_context ioc;
```
    ]
]
]

This document refers to the three implementations above interchangeably and
collectively as "networking." The Boost.Asio and Asio flavors of networking
provide additional functionality which is not currently proposed for C++ (but
will likely appear in a future specification). Examples of functionality
in Boost.Asio not present in the proposed networking draft include support for:

* [@boost:/doc/html/boost_asio/reference/serial_port.html Serial ports]
* [@boost:/doc/html/boost_asio/reference/local__stream_protocol.html UNIX domain sockets]
* [@boost:/doc/html/boost_asio/reference/signal_set.html POSIX signals] (e.g. SIGINT, SIGABORT)
* [@boost:/doc/html/boost_asio/reference/ssl__stream.html TLS streams] (such as OpenSSL)

In this documentation, the example code, and the implementation, the `net`
namespace is used to qualify networking identifiers. For Boost.Beast,
`net` will be an alias for the `boost::asio` namespace.

While this library offers performant implementations of the HTTP and
WebSocket network protocols, it depends on the networking interface
to perform tasks which are not specific to the protocol. Examples of
these tasks include performing domain name resolution (DNS lookup),
establishing outgoing connections, and accepting incoming connections.
Callers are responsible for interacting with networking to initialize
objects to the correct state where they are usable by this library.

To facilitiate interacting with networking, the library provides an
extensive collection of types and algorithms. This section of the
documentation explains these types and algorithms, provides examples
of usage, and also provides refreshers and tutorials for working with
networking.

[heading Abbreviations]

This documentation assumes familiarity with __Asio__, which is
required to work with Beast. Sample code and identifiers used
throughout are written as if the following declarations are in
effect:

[snippet_core_1a]
[snippet_core_1b]

[include 03_core/1_refresher.qbk]
[include 03_core/2_streams.qbk]
[include 03_core/3_layers.qbk]
[include 03_core/4_buffers.qbk]
[include 03_core/5_files.qbk]
[include 03_core/6_composed.qbk]
[include 03_core/7_detect_ssl.qbk]

[endsect]
